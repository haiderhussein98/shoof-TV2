# codemagic.yaml

workflows:
  ios_unsigned:
    name: iOS Unsigned IPA (shoof_tv)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: 15.4
      cocoapods: default
      vars:
        APP_NAME: "Shoof TV"
        BUNDLE_ID: "com.shoof.tv"

    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Flutter clean & get
        script: |
          set -e
          flutter --version
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Ensure Info.plist & Podfile (iOS 13 / disable bitcode)
        script: |
          set -e
          PLIST="ios/Runner/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier ${BUNDLE_ID}" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleName ${APP_NAME}" "$PLIST" || /usr/libexec/PlistBuddy -c "Add :CFBundleName string ${APP_NAME}" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName ${APP_NAME}" "$PLIST" || /usr/libexec/PlistBuddy -c "Add :CFBundleDisplayName string ${APP_NAME}" "$PLIST"

          cat > ios/Podfile <<'EOF'
          platform :ios, '13.0'
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "Generated.xcconfig must exist. Run 'flutter pub get' and try again."
            end
            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found."
          end

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
          flutter_ios_podfile_setup

          target 'Runner' do
            # static linkage يساعد بعض أدوات sideload
            use_frameworks! :linkage => :static
            use_modular_headers!
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |t|
              flutter_additional_ios_build_settings(t)
              t.build_configurations.each do |config|
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
              end
            end
            installer.aggregate_targets.each do |aggregate_target|
              aggregate_target.user_targets.each do |user_target|
                user_target.build_configurations.each do |config|
                  config.build_settings['ENABLE_BITCODE'] = 'NO'
                  config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
                end
              end
            end
          end
          EOF

      - name: Pod install (fresh)
        script: |
          set -e
          cd ios
          rm -rf Pods Podfile.lock
          pod repo update
          pod install --verbose
          cd ..

      # نبني .app فقط بدون توقيع
      - name: Flutter build iOS (no code sign)
        script: |
          set -e
          flutter build ios --release --no-codesign

      # تحضير IPA ملائم لـ eSign/AppleJr:
      # - فك أي symlinks داخل Runner.app
      # - حذف أي توقيعات سابقة (_CodeSignature)
      # - حذف embedded.mobileprovision
      # - ضغط إلى shoof_tv-unsigned.ipa
           - name: Package unsigned .ipa (eSign-friendly)
        script: |
          set -e
          APP_PATH=""
          if [ -d "build/ios/iphoneos/Runner.app" ]; then
            APP_PATH="build/ios/iphoneos/Runner.app"
          elif [ -d "build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app" ]; then
            APP_PATH="build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app"
          fi
          if [ -z "$APP_PATH" ]; then
            echo "❌ Runner.app not found"
            ls -R build || true
            exit 1
          fi
          echo "✔ Using APP_PATH: $APP_PATH"

          # تحقق من flutter_assets
          test -d "$APP_PATH/Frameworks/App.framework/flutter_assets" || { echo "❌ flutter_assets missing"; exit 1; }

          # نحضّر Payload مع فكّ symlinks
          rm -rf Payload
          mkdir -p Payload/Runner.app
          rsync -aL "$APP_PATH/" "Payload/Runner.app/"

          # إزالة أي تواقيع/بروفايلات قديمة
          find "Payload/Runner.app" -name "_CodeSignature" -type d -exec rm -rf {} +
          rm -f "Payload/Runner.app/embedded.mobileprovision"

          # ضغط إلى IPA في المجلد الحالي
          /usr/bin/zip -qry "shoof_tv-unsigned.ipa" Payload

          # اختر مجلد الأرتيفاكتس: استخدم CM_ARTIFACTS إن وُجد، وإلا مجلد محلي artifacts/
          ART_DIR="${CM_ARTIFACTS:-$(pwd)/artifacts}"
          mkdir -p "$ART_DIR"
          echo "📦 Artifact dir: $ART_DIR"
          mv -f "shoof_tv-unsigned.ipa" "$ART_DIR/shoof_tv-unsigned.ipa"
          echo "✅ Created $ART_DIR/shoof_tv-unsigned.ipa"


    artifacts:
      - $CM_ARTIFACTS/shoof_tv-unsigned.ipa

    triggering:
      events: []
