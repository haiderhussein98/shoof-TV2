workflows:
  ios_unsigned:
    name: iOS Unsigned IPA (shoof_tv)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: 15.4
      cocoapods: default
      vars:
        APP_NAME: "Shoof TV"
        BUNDLE_ID: "com.shoof.tv"
        IOS_MIN_VERSION: "13.0"

    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Flutter clean & get
        script: |
          set -e
          flutter --version
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Ensure Info.plist & Podfile (force iOS 13)
        script: |
          set -e
          # --- Info.plist ---
          PLIST="ios/Runner/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier ${BUNDLE_ID}" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleName ${APP_NAME}" "$PLIST" || /usr/libexec/PlistBuddy -c "Add :CFBundleName string ${APP_NAME}" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName ${APP_NAME}" "$PLIST" || /usr/libexec/PlistBuddy -c "Add :CFBundleDisplayName string ${APP_NAME}" "$PLIST"

          # --- Write a clean Podfile enforcing iOS 13.0 (NO heredoc => no format errors) ---
          printf "%s\n" \
          "platform :ios, '13.0'" \
          "ENV['COCOAPODS_DISABLE_STATS'] = 'true'" \
          "" \
          "project 'Runner', {" \
          "  'Debug' => :debug," \
          "  'Profile' => :release," \
          "  'Release' => :release," \
          "}" \
          "" \
          "def flutter_root" \
          "  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)" \
          "  unless File.exist?(generated_xcode_build_settings_path)" \
          "    raise \"Generated.xcconfig must exist. Run 'flutter pub get' and try again.\"" \
          "  end" \
          "  File.foreach(generated_xcode_build_settings_path) do |line|" \
          "    matches = line.match(/FLUTTER_ROOT\\=(.*)/)" \
          "    return matches[1].strip if matches" \
          "  end" \
          "  raise \"FLUTTER_ROOT not found.\"" \
          "end" \
          "" \
          "require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)" \
          "flutter_ios_podfile_setup" \
          "" \
          "# ربط البودز كـ frameworks ستاتيكية لتفادي مشاكل non-modular" \
          "use_frameworks! :linkage => :static" \
          "" \
          "target 'Runner' do" \
          "  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))" \
          "end" \
          "" \
          "post_install do |installer|" \
          "  installer.pods_project.targets.each do |t|" \
          "    t.build_configurations.each do |config|" \
          "      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'" \
          "      config.build_settings['SWIFT_VERSION'] = '5.0'" \
          "      config.build_settings['ENABLE_BITCODE'] = 'NO'" \
          "      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'" \
          "      config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'" \
          "    end" \
          "  end" \
          "end" \
          > ios/Podfile

      - name: Pod install (fresh)
        script: |
          set -e
          cd ios
          rm -rf Pods Podfile.lock ~/Library/Caches/CocoaPods
          pod repo update
          pod install --verbose
          cd ..

      - name: Build (xcodebuild) with signing disabled
        script: |
          set -e
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -sdk iphoneos \
                     -archivePath build/Runner.xcarchive \
                     IPHONEOS_DEPLOYMENT_TARGET=${IOS_MIN_VERSION} \
                     PRODUCT_BUNDLE_IDENTIFIER=${BUNDLE_ID} \
                     CODE_SIGNING_ALLOWED=NO \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGN_IDENTITY="" \
                     DEVELOPMENT_TEAM="" \
                     PROVISIONING_PROFILE_SPECIFIER="" \
                     archive

      - name: Package unsigned .ipa
        script: |
          set -e
          APP_PATH="build/Runner.xcarchive/Products/Applications/Runner.app"
          if [ ! -d "$APP_PATH" ]; then
            APP_PATH="build/Build/Products/Release-iphoneos/Runner.app"
          fi
          if [ ! -d "$APP_PATH" ]; then
            echo "❌ Runner.app not found"
            ls -R build || true
            exit 1
          fi
          rm -rf Payload
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/Runner.app
          /usr/bin/zip -qry "shoof_tv-unsigned.ipa" Payload
          mv "shoof_tv-unsigned.ipa" "$CM_ARTIFACTS/shoof_tv-unsigned.ipa"
          echo "✅ Created $CM_ARTIFACTS/shoof_tv-unsigned.ipa"

    artifacts:
      - $CM_ARTIFACTS/shoof_tv-unsigned.ipa
      - build/Runner.xcarchive
      - build/Build/Products/Release-iphoneos/*.app

    triggering:
      events: []  # تشغيل يدوي
